.TH "core_sc000.h" 3 "Viernes, 14 de Septiembre de 2018" "Ejercicio 1 - TP 5" \" -*- nroff -*-
.ad l
.nh
.SH NAME
core_sc000.h \- CMSIS SC000 Core Peripheral Access Layer Header File\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <stdint\&.h>\fP
.br
\fC#include <core_cmInstr\&.h>\fP
.br
\fC#include <core_cmFunc\&.h>\fP
.br

.SS "Estructuras de datos"

.in +1c
.ti -1c
.RI "union \fBAPSR_Type\fP"
.br
.RI "\fIUnion type to access the Application Program Status Register (APSR)\&. \fP"
.ti -1c
.RI "union \fBIPSR_Type\fP"
.br
.RI "\fIUnion type to access the Interrupt Program Status Register (IPSR)\&. \fP"
.ti -1c
.RI "union \fBxPSR_Type\fP"
.br
.RI "\fIUnion type to access the Special-Purpose Program Status Registers (xPSR)\&. \fP"
.ti -1c
.RI "union \fBCONTROL_Type\fP"
.br
.RI "\fIUnion type to access the Control Registers (CONTROL)\&. \fP"
.ti -1c
.RI "struct \fBNVIC_Type\fP"
.br
.RI "\fIStructure type to access the Nested Vectored Interrupt Controller (NVIC)\&. \fP"
.ti -1c
.RI "struct \fBSCB_Type\fP"
.br
.RI "\fIStructure type to access the System Control Block (SCB)\&. \fP"
.ti -1c
.RI "struct \fBSCnSCB_Type\fP"
.br
.RI "\fIStructure type to access the System Control and ID Register not in the SCB\&. \fP"
.ti -1c
.RI "struct \fBSysTick_Type\fP"
.br
.RI "\fIStructure type to access the System Timer (SysTick)\&. \fP"
.in -1c
.SS "'defines'"

.in +1c
.ti -1c
.RI "#define \fB__CORE_SC000_H_GENERIC\fP"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_IMPLEMENTER_Pos\fP   24"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_IMPLEMENTER_Msk\fP   (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_VARIANT_Pos\fP   20"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_VARIANT_Msk\fP   (0xFUL << SCB_CPUID_VARIANT_Pos)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_ARCHITECTURE_Pos\fP   16"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_ARCHITECTURE_Msk\fP   (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_PARTNO_Pos\fP   4"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_PARTNO_Msk\fP   (0xFFFUL << SCB_CPUID_PARTNO_Pos)"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_REVISION_Pos\fP   0"
.br
.ti -1c
.RI "#define \fBSCB_CPUID_REVISION_Msk\fP   (0xFUL << SCB_CPUID_REVISION_Pos)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_NMIPENDSET_Pos\fP   31"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_NMIPENDSET_Msk\fP   (1UL << SCB_ICSR_NMIPENDSET_Pos)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVSET_Pos\fP   28"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVSET_Msk\fP   (1UL << SCB_ICSR_PENDSVSET_Pos)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVCLR_Pos\fP   27"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSVCLR_Msk\fP   (1UL << SCB_ICSR_PENDSVCLR_Pos)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTSET_Pos\fP   26"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTSET_Msk\fP   (1UL << SCB_ICSR_PENDSTSET_Pos)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTCLR_Pos\fP   25"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_PENDSTCLR_Msk\fP   (1UL << SCB_ICSR_PENDSTCLR_Pos)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPREEMPT_Pos\fP   23"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPREEMPT_Msk\fP   (1UL << SCB_ICSR_ISRPREEMPT_Pos)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPENDING_Pos\fP   22"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_ISRPENDING_Msk\fP   (1UL << SCB_ICSR_ISRPENDING_Pos)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTPENDING_Pos\fP   12"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTPENDING_Msk\fP   (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTACTIVE_Pos\fP   0"
.br
.ti -1c
.RI "#define \fBSCB_ICSR_VECTACTIVE_Msk\fP   (0x1FFUL << SCB_ICSR_VECTACTIVE_Pos)"
.br
.ti -1c
.RI "#define \fBSCB_VTOR_TBLOFF_Pos\fP   7"
.br
.ti -1c
.RI "#define \fBSCB_VTOR_TBLOFF_Msk\fP   (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEY_Pos\fP   16"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEY_Msk\fP   (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEYSTAT_Pos\fP   16"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTKEYSTAT_Msk\fP   (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_ENDIANESS_Pos\fP   15"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_ENDIANESS_Msk\fP   (1UL << SCB_AIRCR_ENDIANESS_Pos)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_SYSRESETREQ_Pos\fP   2"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_SYSRESETREQ_Msk\fP   (1UL << SCB_AIRCR_SYSRESETREQ_Pos)"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTCLRACTIVE_Pos\fP   1"
.br
.ti -1c
.RI "#define \fBSCB_AIRCR_VECTCLRACTIVE_Msk\fP   (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SEVONPEND_Pos\fP   4"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SEVONPEND_Msk\fP   (1UL << SCB_SCR_SEVONPEND_Pos)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPDEEP_Pos\fP   2"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPDEEP_Msk\fP   (1UL << SCB_SCR_SLEEPDEEP_Pos)"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPONEXIT_Pos\fP   1"
.br
.ti -1c
.RI "#define \fBSCB_SCR_SLEEPONEXIT_Msk\fP   (1UL << SCB_SCR_SLEEPONEXIT_Pos)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_STKALIGN_Pos\fP   9"
.br
.ti -1c
.RI "#define \fBSCB_CCR_STKALIGN_Msk\fP   (1UL << SCB_CCR_STKALIGN_Pos)"
.br
.ti -1c
.RI "#define \fBSCB_CCR_UNALIGN_TRP_Pos\fP   3"
.br
.ti -1c
.RI "#define \fBSCB_CCR_UNALIGN_TRP_Msk\fP   (1UL << SCB_CCR_UNALIGN_TRP_Pos)"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLPENDED_Pos\fP   15"
.br
.ti -1c
.RI "#define \fBSCB_SHCSR_SVCALLPENDED_Msk\fP   (1UL << SCB_SHCSR_SVCALLPENDED_Pos)"
.br
.ti -1c
.RI "#define \fBSCB_SFCR_UNIBRTIMING_Pos\fP   0"
.br
.ti -1c
.RI "#define \fBSCB_SFCR_UNIBRTIMING_Msk\fP   (1UL << SCB_SHCSR_SVCALLPENDED_Pos)"
.br
.ti -1c
.RI "#define \fBSCB_SFCR_SECKEY_Pos\fP   16"
.br
.ti -1c
.RI "#define \fBSCB_SFCR_SECKEY_Msk\fP   (0xFFFFUL << SCB_SHCSR_SVCALLPENDED_Pos)"
.br
.ti -1c
.RI "#define \fBSCnSCB_ACTLR_DISMCYCINT_Pos\fP   0"
.br
.ti -1c
.RI "#define \fBSCnSCB_ACTLR_DISMCYCINT_Msk\fP   (1UL << SCnSCB_ACTLR_DISMCYCINT_Pos)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_COUNTFLAG_Pos\fP   16"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_COUNTFLAG_Msk\fP   (1UL << SysTick_CTRL_COUNTFLAG_Pos)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_CLKSOURCE_Pos\fP   2"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_CLKSOURCE_Msk\fP   (1UL << SysTick_CTRL_CLKSOURCE_Pos)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_TICKINT_Pos\fP   1"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_TICKINT_Msk\fP   (1UL << SysTick_CTRL_TICKINT_Pos)"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_ENABLE_Pos\fP   0"
.br
.ti -1c
.RI "#define \fBSysTick_CTRL_ENABLE_Msk\fP   (1UL << SysTick_CTRL_ENABLE_Pos)"
.br
.ti -1c
.RI "#define \fBSysTick_LOAD_RELOAD_Pos\fP   0"
.br
.ti -1c
.RI "#define \fBSysTick_LOAD_RELOAD_Msk\fP   (0xFFFFFFUL << SysTick_LOAD_RELOAD_Pos)"
.br
.ti -1c
.RI "#define \fBSysTick_VAL_CURRENT_Pos\fP   0"
.br
.ti -1c
.RI "#define \fBSysTick_VAL_CURRENT_Msk\fP   (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_NOREF_Pos\fP   31"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_NOREF_Msk\fP   (1UL << SysTick_CALIB_NOREF_Pos)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_SKEW_Pos\fP   30"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_SKEW_Msk\fP   (1UL << SysTick_CALIB_SKEW_Pos)"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_TENMS_Pos\fP   0"
.br
.ti -1c
.RI "#define \fBSysTick_CALIB_TENMS_Msk\fP   (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)"
.br
.ti -1c
.RI "#define \fBSCS_BASE\fP   (0xE000E000UL)"
.br
.ti -1c
.RI "#define \fBSysTick_BASE\fP   (\fBSCS_BASE\fP +  0x0010UL)"
.br
.ti -1c
.RI "#define \fBNVIC_BASE\fP   (\fBSCS_BASE\fP +  0x0100UL)"
.br
.ti -1c
.RI "#define \fBSCB_BASE\fP   (\fBSCS_BASE\fP +  0x0D00UL)"
.br
.ti -1c
.RI "#define \fBSCnSCB\fP   ((\fBSCnSCB_Type\fP    *)     \fBSCS_BASE\fP      )"
.br
.ti -1c
.RI "#define \fBSCB\fP   ((\fBSCB_Type\fP       *)     \fBSCB_BASE\fP      )"
.br
.ti -1c
.RI "#define \fBSysTick\fP   ((\fBSysTick_Type\fP   *)     \fBSysTick_BASE\fP  )"
.br
.ti -1c
.RI "#define \fBNVIC\fP   ((\fBNVIC_Type\fP      *)     \fBNVIC_BASE\fP     )"
.br
.ti -1c
.RI "#define \fB_BIT_SHIFT\fP(IRQn)   (  (((uint32_t)(IRQn)       )    &  0x03) * 8 )"
.br
.ti -1c
.RI "#define \fB_SHP_IDX\fP(IRQn)   ( ((((uint32_t)(IRQn) & 0x0F)\-8) >>    2)     )"
.br
.ti -1c
.RI "#define \fB_IP_IDX\fP(IRQn)   (   ((uint32_t)(IRQn)            >>    2)     )"
.br
.in -1c
.PP
.RI "\fB\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "#define \fB__SC000_CMSIS_VERSION_MAIN\fP   (0x03)"
.br
.ti -1c
.RI "#define \fB__SC000_CMSIS_VERSION_SUB\fP   (0x20)"
.br
.ti -1c
.RI "#define \fB__SC000_CMSIS_VERSION\fP"
.br
.ti -1c
.RI "#define \fB__CORTEX_SC\fP   (0)"
.br
.ti -1c
.RI "#define \fB__FPU_USED\fP   0"
.br
.ti -1c
.RI "#define \fB__CORE_SC000_H_DEPENDANT\fP"
.br
.ti -1c
.RI "#define \fB__I\fP   volatile const"
.br
.ti -1c
.RI "#define \fB__O\fP   volatile"
.br
.ti -1c
.RI "#define \fB__IO\fP   volatile"
.br
.in -1c
.in -1c
.SS "Funciones"

.in +1c
.ti -1c
.RI "__STATIC_INLINE void \fBNVIC_EnableIRQ\fP (\fBIRQn_Type\fP IRQn)"
.br
.RI "\fIEnable External Interrupt\&. \fP"
.ti -1c
.RI "__STATIC_INLINE void \fBNVIC_DisableIRQ\fP (\fBIRQn_Type\fP IRQn)"
.br
.RI "\fIDisable External Interrupt\&. \fP"
.ti -1c
.RI "__STATIC_INLINE uint32_t \fBNVIC_GetPendingIRQ\fP (\fBIRQn_Type\fP IRQn)"
.br
.RI "\fIGet Pending Interrupt\&. \fP"
.ti -1c
.RI "__STATIC_INLINE void \fBNVIC_SetPendingIRQ\fP (\fBIRQn_Type\fP IRQn)"
.br
.RI "\fISet Pending Interrupt\&. \fP"
.ti -1c
.RI "__STATIC_INLINE void \fBNVIC_ClearPendingIRQ\fP (\fBIRQn_Type\fP IRQn)"
.br
.RI "\fIClear Pending Interrupt\&. \fP"
.ti -1c
.RI "__STATIC_INLINE void \fBNVIC_SetPriority\fP (\fBIRQn_Type\fP IRQn, uint32_t priority)"
.br
.RI "\fISet Interrupt Priority\&. \fP"
.ti -1c
.RI "__STATIC_INLINE uint32_t \fBNVIC_GetPriority\fP (\fBIRQn_Type\fP IRQn)"
.br
.RI "\fIGet Interrupt Priority\&. \fP"
.ti -1c
.RI "__STATIC_INLINE void \fBNVIC_SystemReset\fP (void)"
.br
.RI "\fISystem Reset\&. \fP"
.ti -1c
.RI "__STATIC_INLINE uint32_t \fBSysTick_Config\fP (uint32_t ticks)"
.br
.RI "\fISystem Tick Configuration\&. \fP"
.in -1c
.SH "Descripci√≥n detallada"
.PP 
CMSIS SC000 Core Peripheral Access Layer Header File\&. 


.PP
\fBVersi√≥n:\fP
.RS 4
V3\&.20 
.RE
.PP
\fBFecha:\fP
.RS 4
25\&. February 2013
.RE
.PP
\fBNota:\fP
.RS 4
.RE
.PP

.PP
Definici√≥n en el archivo \fBcore_sc000\&.h\fP\&.
.SH "Documentaci√≥n de los 'defines'"
.PP 
.SS "#define __CORE_SC000_H_DEPENDANT"

.PP
Definici√≥n en la l√≠nea 135 del archivo core_sc000\&.h\&.
.SS "#define __CORE_SC000_H_GENERIC"

.PP
Definici√≥n en la l√≠nea 47 del archivo core_sc000\&.h\&.
.SS "#define __CORTEX_SC   (0)"
Cortex secure core 
.PP
Definici√≥n en la l√≠nea 76 del archivo core_sc000\&.h\&.
.SS "#define __FPU_USED   0"
__FPU_USED indicates whether an FPU is used or not\&. This core does not support an FPU at all 
.PP
Definici√≥n en la l√≠nea 103 del archivo core_sc000\&.h\&.
.SS "#define __I   volatile const"
Defines 'read only' permissions 
.PP
Definici√≥n en la l√≠nea 171 del archivo core_sc000\&.h\&.
.SS "#define __IO   volatile"
Defines 'read / write' permissions 
.PP
Definici√≥n en la l√≠nea 174 del archivo core_sc000\&.h\&.
.SS "#define __O   volatile"
Defines 'write only' permissions 
.PP
Definici√≥n en la l√≠nea 173 del archivo core_sc000\&.h\&.
.SS "#define __SC000_CMSIS_VERSION"
\fBValor:\fP
.PP
.nf
((__SC000_CMSIS_VERSION_MAIN << 16) | \
                                      __SC000_CMSIS_VERSION_SUB          )
.fi
CMSIS HAL version number 
.PP
Definici√≥n en la l√≠nea 73 del archivo core_sc000\&.h\&.
.SS "#define __SC000_CMSIS_VERSION_MAIN   (0x03)"
[31:16] CMSIS HAL main version 
.PP
Definici√≥n en la l√≠nea 71 del archivo core_sc000\&.h\&.
.SS "#define __SC000_CMSIS_VERSION_SUB   (0x20)"
[15:0] CMSIS HAL sub version 
.PP
Definici√≥n en la l√≠nea 72 del archivo core_sc000\&.h\&.
.SH "Autor"
.PP 
Generado autom√°ticamente por Doxygen para Ejercicio 1 - TP 5 del c√≥digo fuente\&.
