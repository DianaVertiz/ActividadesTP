.TH "EMC_18XX_43XX" 3 "Viernes, 14 de Septiembre de 2018" "Ejercicio 1 - TP 5" \" -*- nroff -*-
.ad l
.nh
.SH NAME
EMC_18XX_43XX \- CHIP: LPC18xx/43xx External Memory Controller driver
.SS "Estructuras de datos"

.in +1c
.ti -1c
.RI "struct \fBLPC_EMC_T\fP"
.br
.RI "\fIExternal Memory Controller (EMC) register block structure\&. \fP"
.ti -1c
.RI "struct \fBIP_EMC_DYN_DEVICE_CONFIG_T\fP"
.br
.RI "\fIEMC Dynamic Device Configuration structure used for IP drivers\&. \fP"
.ti -1c
.RI "struct \fBIP_EMC_DYN_CONFIG_T\fP"
.br
.RI "\fIEMC Dynamic Configure Struct\&. \fP"
.ti -1c
.RI "struct \fBIP_EMC_STATIC_CONFIG_T\fP"
.br
.RI "\fIEMC Static Configure Structure\&. \fP"
.in -1c
.SS "'defines'"

.in +1c
.ti -1c
.RI "#define \fBEMC_ADDRESS_DYCS0\fP   (0x28000000)"
.br
.ti -1c
.RI "#define \fBEMC_ADDRESS_DYCS1\fP   (0x30000000)"
.br
.ti -1c
.RI "#define \fBEMC_ADDRESS_DYCS2\fP   (0x60000000)"
.br
.ti -1c
.RI "#define \fBEMC_ADDRESS_DYCS3\fP   (0x70000000)"
.br
.ti -1c
.RI "#define \fBEMC_ADDRESS_CS0\fP   (0x1C000000)"
.br
.ti -1c
.RI "#define \fBEMC_ADDRESS_CS1\fP   (0x1D000000)"
.br
.ti -1c
.RI "#define \fBEMC_ADDRESS_CS2\fP   (0x1E000000)"
.br
.ti -1c
.RI "#define \fBEMC_ADDRESS_CS3\fP   (0x1F000000)"
.br
.ti -1c
.RI "#define \fBEMC_SUPPORT_ONLY_PL172\fP"
.br
.RI "\fIEMC register support bitfields and mask\&. \fP"
.ti -1c
.RI "#define \fBEMC_CONFIG_ENDIAN_LITTLE\fP   (0)"
.br
.ti -1c
.RI "#define \fBEMC_CONFIG_ENDIAN_BIG\fP   (1)"
.br
.ti -1c
.RI "#define \fBEMC_CONFIG_BUFFER_ENABLE\fP   (1 << 19)"
.br
.ti -1c
.RI "#define \fBEMC_CONFIG_WRITE_PROTECT\fP   (1 << 20)"
.br
.ti -1c
.RI "#define \fBEMC_DYN_CONFIG_MD_BIT\fP   (3)"
.br
.ti -1c
.RI "#define \fBEMC_DYN_CONFIG_MD_SDRAM\fP   (0 << \fBEMC_DYN_CONFIG_MD_BIT\fP)"
.br
.ti -1c
.RI "#define \fBEMC_DYN_CONFIG_MD_LPSDRAM\fP   (1 << \fBEMC_DYN_CONFIG_MD_BIT\fP)"
.br
.ti -1c
.RI "#define \fBEMC_DYN_CONFIG_LPSDRAM_BIT\fP   (12)"
.br
.ti -1c
.RI "#define \fBEMC_DYN_CONFIG_LPSDRAM\fP   (1 << \fBEMC_DYN_CONFIG_LPSDRAM_BIT\fP)"
.br
.ti -1c
.RI "#define \fBEMC_DYN_CONFIG_DEV_SIZE_BIT\fP   (9)"
.br
.ti -1c
.RI "#define \fBEMC_DYN_CONFIG_DEV_SIZE_16Mb\fP   (0x00 << EMC_DYN_CONFIG_DEV_SIZE_BIT)"
.br
.ti -1c
.RI "#define \fBEMC_DYN_CONFIG_DEV_SIZE_64Mb\fP   (0x01 << EMC_DYN_CONFIG_DEV_SIZE_BIT)"
.br
.ti -1c
.RI "#define \fBEMC_DYN_CONFIG_DEV_SIZE_128Mb\fP   (0x02 << EMC_DYN_CONFIG_DEV_SIZE_BIT)"
.br
.ti -1c
.RI "#define \fBEMC_DYN_CONFIG_DEV_SIZE_256Mb\fP   (0x03 << EMC_DYN_CONFIG_DEV_SIZE_BIT)"
.br
.ti -1c
.RI "#define \fBEMC_DYN_CONFIG_DEV_SIZE_512Mb\fP   (0x04 << EMC_DYN_CONFIG_DEV_SIZE_BIT)"
.br
.ti -1c
.RI "#define \fBEMC_DYN_CONFIG_DEV_BUS_BIT\fP   (7)"
.br
.ti -1c
.RI "#define \fBEMC_DYN_CONFIG_DEV_BUS_8\fP   (0x00 << EMC_DYN_CONFIG_DEV_BUS_BIT)"
.br
.ti -1c
.RI "#define \fBEMC_DYN_CONFIG_DEV_BUS_16\fP   (0x01 << EMC_DYN_CONFIG_DEV_BUS_BIT)"
.br
.ti -1c
.RI "#define \fBEMC_DYN_CONFIG_DEV_BUS_32\fP   (0x02 << EMC_DYN_CONFIG_DEV_BUS_BIT)"
.br
.ti -1c
.RI "#define \fBEMC_DYN_CONFIG_DATA_BUS_WIDTH_BIT\fP   (14)"
.br
.ti -1c
.RI "#define \fBEMC_DYN_CONFIG_DATA_BUS_16\fP   (0x00 << EMC_DYN_CONFIG_DATA_BUS_WIDTH_BIT)"
.br
.ti -1c
.RI "#define \fBEMC_DYN_CONFIG_DATA_BUS_32\fP   (0x01 << EMC_DYN_CONFIG_DATA_BUS_WIDTH_BIT)"
.br
.ti -1c
.RI "#define \fBEMC_DYN_CONFIG_2Mx8_2BANKS_11ROWS_9COLS\fP   ((0x0 << 9) | (0x0 << 7))"
.br
.ti -1c
.RI "#define \fBEMC_DYN_CONFIG_1Mx16_2BANKS_11ROWS_8COLS\fP   ((0x0 << 9) | (0x1 << 7))"
.br
.ti -1c
.RI "#define \fBEMC_DYN_CONFIG_8Mx8_4BANKS_12ROWS_9COLS\fP   ((0x1 << 9) | (0x0 << 7))"
.br
.ti -1c
.RI "#define \fBEMC_DYN_CONFIG_4Mx16_4BANKS_12ROWS_8COLS\fP   ((0x1 << 9) | (0x1 << 7))"
.br
.ti -1c
.RI "#define \fBEMC_DYN_CONFIG_2Mx32_4BANKS_11ROWS_8COLS\fP   ((0x1 << 9) | (0x2 << 7))"
.br
.ti -1c
.RI "#define \fBEMC_DYN_CONFIG_16Mx8_4BANKS_12ROWS_10COLS\fP   ((0x2 << 9) | (0x0 << 7))"
.br
.ti -1c
.RI "#define \fBEMC_DYN_CONFIG_8Mx16_4BANKS_12ROWS_9COLS\fP   ((0x2 << 9) | (0x1 << 7))"
.br
.ti -1c
.RI "#define \fBEMC_DYN_CONFIG_4Mx32_4BANKS_12ROWS_8COLS\fP   ((0x2 << 9) | (0x2 << 7))"
.br
.ti -1c
.RI "#define \fBEMC_DYN_CONFIG_32Mx8_4BANKS_13ROWS_10COLS\fP   ((0x3 << 9) | (0x0 << 7))"
.br
.ti -1c
.RI "#define \fBEMC_DYN_CONFIG_16Mx16_4BANKS_13ROWS_9COLS\fP   ((0x3 << 9) | (0x1 << 7))"
.br
.ti -1c
.RI "#define \fBEMC_DYN_CONFIG_8Mx32_4BANKS_13ROWS_8COLS\fP   ((0x3 << 9) | (0x2 << 7))"
.br
.ti -1c
.RI "#define \fBEMC_DYN_CONFIG_64Mx8_4BANKS_13ROWS_11COLS\fP   ((0x4 << 9) | (0x0 << 7))"
.br
.ti -1c
.RI "#define \fBEMC_DYN_CONFIG_32Mx16_4BANKS_13ROWS_10COLS\fP   ((0x4 << 9) | (0x1 << 7))"
.br
.ti -1c
.RI "#define \fBEMC_DYN_MODE_BURST_LEN_BIT\fP   (0)"
.br
.ti -1c
.RI "#define \fBEMC_DYN_MODE_BURST_LEN_1\fP   (0)"
.br
.ti -1c
.RI "#define \fBEMC_DYN_MODE_BURST_LEN_2\fP   (1)"
.br
.ti -1c
.RI "#define \fBEMC_DYN_MODE_BURST_LEN_4\fP   (2)"
.br
.ti -1c
.RI "#define \fBEMC_DYN_MODE_BURST_LEN_8\fP   (3)"
.br
.ti -1c
.RI "#define \fBEMC_DYN_MODE_BURST_LEN_FULL\fP   (7)"
.br
.ti -1c
.RI "#define \fBEMC_DYN_MODE_BURST_TYPE_BIT\fP   (3)"
.br
.ti -1c
.RI "#define \fBEMC_DYN_MODE_BURST_TYPE_SEQUENTIAL\fP   (0 << \fBEMC_DYN_MODE_BURST_TYPE_BIT\fP)"
.br
.ti -1c
.RI "#define \fBEMC_DYN_MODE_BURST_TYPE_INTERLEAVE\fP   (1 << \fBEMC_DYN_MODE_BURST_TYPE_BIT\fP)"
.br
.ti -1c
.RI "#define \fBEMC_DYN_MODE_CAS_BIT\fP   (4)"
.br
.ti -1c
.RI "#define \fBEMC_DYN_MODE_CAS_1\fP   (1 << \fBEMC_DYN_MODE_CAS_BIT\fP)"
.br
.ti -1c
.RI "#define \fBEMC_DYN_MODE_CAS_2\fP   (2 << \fBEMC_DYN_MODE_CAS_BIT\fP)"
.br
.ti -1c
.RI "#define \fBEMC_DYN_MODE_CAS_3\fP   (3 << \fBEMC_DYN_MODE_CAS_BIT\fP)"
.br
.ti -1c
.RI "#define \fBEMC_DYN_MODE_OPMODE_BIT\fP   (7)"
.br
.ti -1c
.RI "#define \fBEMC_DYN_MODE_OPMODE_STANDARD\fP   (0 << \fBEMC_DYN_MODE_OPMODE_BIT\fP)"
.br
.ti -1c
.RI "#define \fBEMC_DYN_MODE_WBMODE_BIT\fP   (9)"
.br
.ti -1c
.RI "#define \fBEMC_DYN_MODE_WBMODE_PROGRAMMED\fP   (0 << \fBEMC_DYN_MODE_WBMODE_BIT\fP)"
.br
.ti -1c
.RI "#define \fBEMC_DYN_MODE_WBMODE_SINGLE_LOC\fP   (1 << \fBEMC_DYN_MODE_WBMODE_BIT\fP)"
.br
.ti -1c
.RI "#define \fBEMC_DYN_CONTROL_ENABLE\fP   (0x03)"
.br
.ti -1c
.RI "#define \fBEMC_STATIC_CONFIG_MEM_WIDTH_8\fP   (0)"
.br
.ti -1c
.RI "#define \fBEMC_STATIC_CONFIG_MEM_WIDTH_16\fP   (1)"
.br
.ti -1c
.RI "#define \fBEMC_STATIC_CONFIG_MEM_WIDTH_32\fP   (2)"
.br
.ti -1c
.RI "#define \fBEMC_STATIC_CONFIG_PAGE_MODE_BIT\fP   (3)"
.br
.ti -1c
.RI "#define \fBEMC_STATIC_CONFIG_PAGE_MODE_ENABLE\fP   (1 << \fBEMC_STATIC_CONFIG_PAGE_MODE_BIT\fP)"
.br
.ti -1c
.RI "#define \fBEMC_STATIC_CONFIG_CS_POL_BIT\fP   (6)"
.br
.ti -1c
.RI "#define \fBEMC_STATIC_CONFIG_CS_POL_ACTIVE_HIGH\fP   (1 << \fBEMC_STATIC_CONFIG_CS_POL_BIT\fP)"
.br
.ti -1c
.RI "#define \fBEMC_STATIC_CONFIG_CS_POL_ACTIVE_LOW\fP   (0 << \fBEMC_STATIC_CONFIG_CS_POL_BIT\fP)"
.br
.ti -1c
.RI "#define \fBEMC_STATIC_CONFIG_BLS_BIT\fP   (7)"
.br
.ti -1c
.RI "#define \fBEMC_STATIC_CONFIG_BLS_HIGH\fP   (1 << \fBEMC_STATIC_CONFIG_BLS_BIT\fP)"
.br
.ti -1c
.RI "#define \fBEMC_STATIC_CONFIG_BLS_LOW\fP   (0 << \fBEMC_STATIC_CONFIG_BLS_BIT\fP)"
.br
.ti -1c
.RI "#define \fBEMC_STATIC_CONFIG_EW_BIT\fP   (8)"
.br
.ti -1c
.RI "#define \fBEMC_STATIC_CONFIG_EW_ENABLE\fP   (1 << \fBEMC_STATIC_CONFIG_EW_BIT\fP)"
.br
.ti -1c
.RI "#define \fBEMC_STATIC_CONFIG_EW_DISABLE\fP   (0 << \fBEMC_STATIC_CONFIG_EW_BIT\fP)"
.br
.ti -1c
.RI "#define \fBQ24_8_FP\fP(x)   ((x) * 256)"
.br
.ti -1c
.RI "#define \fBEMC_NANOSECOND\fP(x)   \fBQ24_8_FP\fP(x)"
.br
.ti -1c
.RI "#define \fBEMC_CLOCK\fP(x)   \fBQ24_8_FP\fP(\-(x))"
.br
.in -1c
.SS "Funciones"

.in +1c
.ti -1c
.RI "void \fBChip_EMC_Dynamic_Init\fP (\fBIP_EMC_DYN_CONFIG_T\fP *Dynamic_Config)"
.br
.RI "\fIDyanmic memory setup\&. \fP"
.ti -1c
.RI "void \fBChip_EMC_Static_Init\fP (\fBIP_EMC_STATIC_CONFIG_T\fP *Static_Config)"
.br
.RI "\fIStatic memory setup\&. \fP"
.ti -1c
.RI "void \fBChip_EMC_Dynamic_Enable\fP (uint8_t Enable)"
.br
.RI "\fIEnable Dynamic Memory Controller\&. \fP"
.ti -1c
.RI "void \fBChip_EMC_Mirror\fP (uint8_t Enable)"
.br
.RI "\fIMirror CS1 to CS0 and DYCS0\&. \fP"
.ti -1c
.RI "void \fBChip_EMC_Enable\fP (uint8_t Enable)"
.br
.RI "\fIEnable EMC\&. \fP"
.ti -1c
.RI "void \fBChip_EMC_LowPowerMode\fP (uint8_t Enable)"
.br
.RI "\fISet EMC LowPower Mode\&. \fP"
.ti -1c
.RI "void \fBChip_EMC_Init\fP (uint32_t Enable, uint32_t ClockRatio, uint32_t EndianMode)"
.br
.RI "\fIInitialize EMC\&. \fP"
.ti -1c
.RI "\fBSTATIC\fP \fBINLINE\fP void \fBChip_EMC_SetStaticExtendedWait\fP (uint32_t Wait16Clks)"
.br
.RI "\fISet Static Memory Extended Wait in Clock\&. \fP"
.in -1c
.SH "Descripción detallada"
.PP 
The EMC interface clocks must be enabled outside this driver prior to calling any function of this driver\&. 
.SH "Documentación de los 'defines'"
.PP 
.SS "#define EMC_ADDRESS_CS0   (0x1C000000)"
Static Chip Select Address 
.PP
Definición en la línea 128 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_ADDRESS_CS1   (0x1D000000)"

.PP
Definición en la línea 129 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_ADDRESS_CS2   (0x1E000000)"

.PP
Definición en la línea 130 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_ADDRESS_CS3   (0x1F000000)"

.PP
Definición en la línea 131 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_ADDRESS_DYCS0   (0x28000000)"
Dynamic Chip Select Address 
.PP
Definición en la línea 120 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_ADDRESS_DYCS1   (0x30000000)"

.PP
Definición en la línea 121 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_ADDRESS_DYCS2   (0x60000000)"

.PP
Definición en la línea 122 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_ADDRESS_DYCS3   (0x70000000)"

.PP
Definición en la línea 123 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_CLOCK(x)   \fBQ24_8_FP\fP(\-(x))"

.PP
Definición en la línea 237 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_CONFIG_BUFFER_ENABLE   (1 << 19)"
EMC Buffer enable bit in EMC Dynamic Configuration register 
.PP
Definición en la línea 142 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_CONFIG_ENDIAN_BIG   (1)"
Value for EMC to operate in Big Endian Mode 
.PP
Definición en la línea 140 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_CONFIG_ENDIAN_LITTLE   (0)"
Value for EMC to operate in Little Endian Mode 
.PP
Definición en la línea 139 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_CONFIG_WRITE_PROTECT   (1 << 20)"
EMC Write protect bit in EMC Dynamic Configuration register 
.PP
Definición en la línea 143 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_CONFIG_16Mx16_4BANKS_13ROWS_9COLS   ((0x3 << 9) | (0x1 << 7))"
Value for Memory configuration - 16Mx16 4 Banks 13 Rows 8 Columns 
.PP
Definición en la línea 179 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_CONFIG_16Mx8_4BANKS_12ROWS_10COLS   ((0x2 << 9) | (0x0 << 7))"
Value for Memory configuration - 16Mx8 4 Banks 12 Rows 10 Columns 
.PP
Definición en la línea 175 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_CONFIG_1Mx16_2BANKS_11ROWS_8COLS   ((0x0 << 9) | (0x1 << 7))"
Value for Memory configuration - 1Mx16 2 Banks 11 Rows 8 Columns 
.PP
Definición en la línea 171 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_CONFIG_2Mx32_4BANKS_11ROWS_8COLS   ((0x1 << 9) | (0x2 << 7))"
Value for Memory configuration - 2Mx32 4 Banks 11 Rows 8 Columns 
.PP
Definición en la línea 174 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_CONFIG_2Mx8_2BANKS_11ROWS_9COLS   ((0x0 << 9) | (0x0 << 7))"
Value for Memory configuration - 2Mx8 2 Banks 11 Rows 9 Columns 
.PP
Definición en la línea 170 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_CONFIG_32Mx16_4BANKS_13ROWS_10COLS   ((0x4 << 9) | (0x1 << 7))"
Value for Memory configuration - 32Mx16 4 Banks 13 Rows 10 Columns Dynamic Memory Mode Register Bit Definition 
.PP
Definición en la línea 182 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_CONFIG_32Mx8_4BANKS_13ROWS_10COLS   ((0x3 << 9) | (0x0 << 7))"
Value for Memory configuration - 32Mx8 4 Banks 13 Rows 10 Columns 
.PP
Definición en la línea 178 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_CONFIG_4Mx16_4BANKS_12ROWS_8COLS   ((0x1 << 9) | (0x1 << 7))"
Value for Memory configuration - 4Mx16 4 Banks 12 Rows 8 Columns 
.PP
Definición en la línea 173 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_CONFIG_4Mx32_4BANKS_12ROWS_8COLS   ((0x2 << 9) | (0x2 << 7))"
Value for Memory configuration - 4Mx32 4 Banks 12 Rows 8 Columns 
.PP
Definición en la línea 177 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_CONFIG_64Mx8_4BANKS_13ROWS_11COLS   ((0x4 << 9) | (0x0 << 7))"
Value for Memory configuration - 64Mx8 4 Banks 13 Rows 11 Columns 
.PP
Definición en la línea 181 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_CONFIG_8Mx16_4BANKS_12ROWS_9COLS   ((0x2 << 9) | (0x1 << 7))"
Value for Memory configuration - 8Mx16 4 Banks 12 Rows 9 Columns 
.PP
Definición en la línea 176 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_CONFIG_8Mx32_4BANKS_13ROWS_8COLS   ((0x3 << 9) | (0x2 << 7))"
Value for Memory configuration - 8Mx32 4 Banks 13 Rows 8 Columns 
.PP
Definición en la línea 180 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_CONFIG_8Mx8_4BANKS_12ROWS_9COLS   ((0x1 << 9) | (0x0 << 7))"
Value for Memory configuration - 8Mx8 4 Banks 12 Rows 9 Columns 
.PP
Definición en la línea 172 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_CONFIG_DATA_BUS_16   (0x00 << EMC_DYN_CONFIG_DATA_BUS_WIDTH_BIT)"
Device 16-bit data bus width value in EMC Dynamic Configuration register 
.PP
Definición en la línea 166 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_CONFIG_DATA_BUS_32   (0x01 << EMC_DYN_CONFIG_DATA_BUS_WIDTH_BIT)"
Device 32-bit bus width value in EMC Dynamic Configuration register Memory configuration values in EMC Dynamic Configuration Register 
.PP
Definición en la línea 167 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_CONFIG_DATA_BUS_WIDTH_BIT   (14)"
Device data bus width starting bit in EMC Dynamic Configuration register 
.PP
Definición en la línea 165 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_CONFIG_DEV_BUS_16   (0x01 << EMC_DYN_CONFIG_DEV_BUS_BIT)"
Device 16-bit bus width value in EMC Dynamic Configuration register 
.PP
Definición en la línea 162 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_CONFIG_DEV_BUS_32   (0x02 << EMC_DYN_CONFIG_DEV_BUS_BIT)"
Device 32-bit bus width value in EMC Dynamic Configuration register 
.PP
Definición en la línea 163 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_CONFIG_DEV_BUS_8   (0x00 << EMC_DYN_CONFIG_DEV_BUS_BIT)"
Device 8-bit bus width value in EMC Dynamic Configuration register 
.PP
Definición en la línea 161 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_CONFIG_DEV_BUS_BIT   (7)"
Device bus width starting bit in EMC Dynamic Configuration register 
.PP
Definición en la línea 160 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_CONFIG_DEV_SIZE_128Mb   (0x02 << EMC_DYN_CONFIG_DEV_SIZE_BIT)"
128Mb Device Size value in EMC Dynamic Configuration register 
.PP
Definición en la línea 156 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_CONFIG_DEV_SIZE_16Mb   (0x00 << EMC_DYN_CONFIG_DEV_SIZE_BIT)"
16Mb Device Size value in EMC Dynamic Configuration register 
.PP
Definición en la línea 154 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_CONFIG_DEV_SIZE_256Mb   (0x03 << EMC_DYN_CONFIG_DEV_SIZE_BIT)"
256Mb Device Size value in EMC Dynamic Configuration register 
.PP
Definición en la línea 157 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_CONFIG_DEV_SIZE_512Mb   (0x04 << EMC_DYN_CONFIG_DEV_SIZE_BIT)"
512Mb Device Size value in EMC Dynamic Configuration register 
.PP
Definición en la línea 158 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_CONFIG_DEV_SIZE_64Mb   (0x01 << EMC_DYN_CONFIG_DEV_SIZE_BIT)"
64Mb Device Size value in EMC Dynamic Configuration register 
.PP
Definición en la línea 155 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_CONFIG_DEV_SIZE_BIT   (9)"
Device Size starting bit in EMC Dynamic Configuration register 
.PP
Definición en la línea 153 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_CONFIG_LPSDRAM   (1 << \fBEMC_DYN_CONFIG_LPSDRAM_BIT\fP)"
LPSDRAM value in EMC Dynamic Configuration register 
.PP
Definición en la línea 151 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_CONFIG_LPSDRAM_BIT   (12)"
LPSDRAM bit in EMC Dynamic Configuration register 
.PP
Definición en la línea 150 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_CONFIG_MD_BIT   (3)"
Memory device bit in EMC Dynamic Configuration register 
.PP
Definición en la línea 146 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_CONFIG_MD_LPSDRAM   (1 << \fBEMC_DYN_CONFIG_MD_BIT\fP)"
Select device as LPSDRAM in EMC Dynamic Configuration register 
.PP
Definición en la línea 148 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_CONFIG_MD_SDRAM   (0 << \fBEMC_DYN_CONFIG_MD_BIT\fP)"
Select device as SDRAM in EMC Dynamic Configuration register 
.PP
Definición en la línea 147 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_CONTROL_ENABLE   (0x03)"
Control Enable value Static Memory Configuration Register Bit Definitions 
.PP
Definición en la línea 212 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_MODE_BURST_LEN_1   (0)"
Value to set Burst Length to 1 in Dynamic Memory Mode Register 
.PP
Definición en la línea 186 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_MODE_BURST_LEN_2   (1)"
Value to set Burst Length to 2 in Dynamic Memory Mode Register 
.PP
Definición en la línea 187 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_MODE_BURST_LEN_4   (2)"
Value to set Burst Length to 4 in Dynamic Memory Mode Register 
.PP
Definición en la línea 188 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_MODE_BURST_LEN_8   (3)"
Value to set Burst Length to 8 in Dynamic Memory Mode Register 
.PP
Definición en la línea 189 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_MODE_BURST_LEN_BIT   (0)"
Starting bit No\&. of Burst Length in Dynamic Memory Mode Register 
.PP
Definición en la línea 185 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_MODE_BURST_LEN_FULL   (7)"
Value to set Burst Length to Full in Dynamic Memory Mode Register 
.PP
Definición en la línea 190 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_MODE_BURST_TYPE_BIT   (3)"
Burst Type bit in Dynamic Memory Mode Register 
.PP
Definición en la línea 192 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_MODE_BURST_TYPE_INTERLEAVE   (1 << \fBEMC_DYN_MODE_BURST_TYPE_BIT\fP)"
Burst Type Interleaved in Dynamic Memory Mode Register CAS Latency in Dynamic Mode Register 
.PP
Definición en la línea 194 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_MODE_BURST_TYPE_SEQUENTIAL   (0 << \fBEMC_DYN_MODE_BURST_TYPE_BIT\fP)"
Burst Type Sequential in Dynamic Memory Mode Register 
.PP
Definición en la línea 193 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_MODE_CAS_1   (1 << \fBEMC_DYN_MODE_CAS_BIT\fP)"
value for CAS latency of 1 cycle 
.PP
Definición en la línea 198 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_MODE_CAS_2   (2 << \fBEMC_DYN_MODE_CAS_BIT\fP)"
value for CAS latency of 2 cycle 
.PP
Definición en la línea 199 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_MODE_CAS_3   (3 << \fBEMC_DYN_MODE_CAS_BIT\fP)"
value for CAS latency of 3 cycle Operation Mode in Dynamic Mode register 
.PP
Definición en la línea 200 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_MODE_CAS_BIT   (4)"
CAS latency starting bit in Dynamic Memory Mode register 
.PP
Definición en la línea 197 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_MODE_OPMODE_BIT   (7)"
Dynamic Mode Operation bit 
.PP
Definición en la línea 203 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_MODE_OPMODE_STANDARD   (0 << \fBEMC_DYN_MODE_OPMODE_BIT\fP)"
Value for Dynamic standard operation Mode Write Burst Mode in Dynamic Mode register 
.PP
Definición en la línea 204 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_MODE_WBMODE_BIT   (9)"
Write Burst Mode bit 
.PP
Definición en la línea 207 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_MODE_WBMODE_PROGRAMMED   (0 << \fBEMC_DYN_MODE_WBMODE_BIT\fP)"
Write Burst Mode programmed 
.PP
Definición en la línea 208 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_DYN_MODE_WBMODE_SINGLE_LOC   (1 << \fBEMC_DYN_MODE_WBMODE_BIT\fP)"
Write Burst Mode Single LOC Dynamic Memory Control Register Bit Definitions 
.PP
Definición en la línea 209 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_NANOSECOND(x)   \fBQ24_8_FP\fP(x)"

.PP
Definición en la línea 236 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_STATIC_CONFIG_BLS_BIT   (7)"
BLS Configuration bit No 
.PP
Definición en la línea 226 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_STATIC_CONFIG_BLS_HIGH   (1 << \fBEMC_STATIC_CONFIG_BLS_BIT\fP)"
BLS High Configuration value 
.PP
Definición en la línea 227 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_STATIC_CONFIG_BLS_LOW   (0 << \fBEMC_STATIC_CONFIG_BLS_BIT\fP)"
BLS Low Configuration value 
.PP
Definición en la línea 228 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_STATIC_CONFIG_CS_POL_ACTIVE_HIGH   (1 << \fBEMC_STATIC_CONFIG_CS_POL_BIT\fP)"
Chip Select polarity - Active High 
.PP
Definición en la línea 223 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_STATIC_CONFIG_CS_POL_ACTIVE_LOW   (0 << \fBEMC_STATIC_CONFIG_CS_POL_BIT\fP)"
Chip Select polarity - Active Low 
.PP
Definición en la línea 224 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_STATIC_CONFIG_CS_POL_BIT   (6)"
Chip Select bit No 
.PP
Definición en la línea 222 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_STATIC_CONFIG_EW_BIT   (8)"
Ext Wait bit No 
.PP
Definición en la línea 230 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_STATIC_CONFIG_EW_DISABLE   (0 << \fBEMC_STATIC_CONFIG_EW_BIT\fP)"
Ext Wait Diabled value Q24\&.8 Fixed Point Helper 
.PP
Definición en la línea 232 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_STATIC_CONFIG_EW_ENABLE   (1 << \fBEMC_STATIC_CONFIG_EW_BIT\fP)"
Ext Wait Enabled value 
.PP
Definición en la línea 231 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_STATIC_CONFIG_MEM_WIDTH_16   (1)"
Static Memory Configuration - 16-bit width 
.PP
Definición en la línea 216 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_STATIC_CONFIG_MEM_WIDTH_32   (2)"
Static Memory Configuration - 32-bit width 
.PP
Definición en la línea 217 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_STATIC_CONFIG_MEM_WIDTH_8   (0)"
Static Memory Configuration - 8-bit width 
.PP
Definición en la línea 215 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_STATIC_CONFIG_PAGE_MODE_BIT   (3)"
Page Mode bit No 
.PP
Definición en la línea 219 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_STATIC_CONFIG_PAGE_MODE_ENABLE   (1 << \fBEMC_STATIC_CONFIG_PAGE_MODE_BIT\fP)"
Value to enable Page Mode 
.PP
Definición en la línea 220 del archivo emc_18xx_43xx\&.h\&.
.SS "#define EMC_SUPPORT_ONLY_PL172"

.PP
EMC register support bitfields and mask\&. Reserve for extending support to ARM9 or nextgen LPC 
.PP
Definición en la línea 137 del archivo emc_18xx_43xx\&.h\&.
.SS "#define Q24_8_FP(x)   ((x) * 256)"

.PP
Definición en la línea 235 del archivo emc_18xx_43xx\&.h\&.
.SH "Documentación de las funciones"
.PP 
.SS "void Chip_EMC_Dynamic_Enable (uint8_t Enable)"

.PP
Enable Dynamic Memory Controller\&. 
.PP
\fBParámetros:\fP
.RS 4
\fIEnable\fP : 1 = Enable Dynamic Memory Controller, 0 = Disable 
.RE
.PP
\fBDevuelve:\fP
.RS 4
None 
.RE
.PP

.PP
Definición en la línea 227 del archivo emc_18xx_43xx\&.c\&.
.SS "void Chip_EMC_Dynamic_Init (\fBIP_EMC_DYN_CONFIG_T\fP * Dynamic_Config)"

.PP
Dyanmic memory setup\&. 
.PP
\fBParámetros:\fP
.RS 4
\fIDynamic_Config\fP : Pointer to dynamic memory setup data 
.RE
.PP
\fBDevuelve:\fP
.RS 4
None 
.RE
.PP

.PP
Definición en la línea 216 del archivo emc_18xx_43xx\&.c\&.
.SS "void Chip_EMC_Enable (uint8_t Enable)"

.PP
Enable EMC\&. 
.PP
\fBParámetros:\fP
.RS 4
\fIEnable\fP : 1 = Enable, 0 = Disable 
.RE
.PP
\fBDevuelve:\fP
.RS 4
None 
.RE
.PP

.PP
Definición en la línea 260 del archivo emc_18xx_43xx\&.c\&.
.SS "void Chip_EMC_Init (uint32_t Enable, uint32_t ClockRatio, uint32_t EndianMode)"

.PP
Initialize EMC\&. 
.PP
\fBParámetros:\fP
.RS 4
\fIEnable\fP : 1 = Enable, 0 = Disable 
.br
\fIClockRatio\fP : clock out ratio, 0 = 1:1, 1 = 1:2 
.br
\fIEndianMode\fP : Endian Mode, 0 = Little, 1 = Big 
.RE
.PP
\fBDevuelve:\fP
.RS 4
None 
.RE
.PP

.PP
Definición en la línea 282 del archivo emc_18xx_43xx\&.c\&.
.SS "void Chip_EMC_LowPowerMode (uint8_t Enable)"

.PP
Set EMC LowPower Mode\&. 
.PP
\fBParámetros:\fP
.RS 4
\fIEnable\fP : 1 = Enable, 0 = Disable 
.RE
.PP
\fBDevuelve:\fP
.RS 4
None 
.RE
.PP
\fBNota:\fP
.RS 4
This function should only be called when the memory controller is not busy (bit 0 of the status register is not set)\&. 
.RE
.PP

.PP
Definición en la línea 271 del archivo emc_18xx_43xx\&.c\&.
.SS "void Chip_EMC_Mirror (uint8_t Enable)"

.PP
Mirror CS1 to CS0 and DYCS0\&. 
.PP
\fBParámetros:\fP
.RS 4
\fIEnable\fP : 1 = Mirror, 0 = Normal Memory Map 
.RE
.PP
\fBDevuelve:\fP
.RS 4
None 
.RE
.PP

.PP
Definición en la línea 249 del archivo emc_18xx_43xx\&.c\&.
.SS "\fBSTATIC\fP \fBINLINE\fP void Chip_EMC_SetStaticExtendedWait (uint32_t Wait16Clks)"

.PP
Set Static Memory Extended Wait in Clock\&. 
.PP
\fBParámetros:\fP
.RS 4
\fIWait16Clks\fP : Number of '16 clock' delay cycles 
.RE
.PP
\fBDevuelve:\fP
.RS 4
None 
.RE
.PP

.PP
Definición en la línea 341 del archivo emc_18xx_43xx\&.h\&.
.SS "void Chip_EMC_Static_Init (\fBIP_EMC_STATIC_CONFIG_T\fP * Static_Config)"

.PP
Static memory setup\&. 
.PP
\fBParámetros:\fP
.RS 4
\fIStatic_Config\fP : Pointer to static memory setup data 
.RE
.PP
\fBDevuelve:\fP
.RS 4
None 
.RE
.PP

.PP
Definición en la línea 238 del archivo emc_18xx_43xx\&.c\&.
.SH "Autor"
.PP 
Generado automáticamente por Doxygen para Ejercicio 1 - TP 5 del código fuente\&.
